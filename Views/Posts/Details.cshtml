@model Dragon_BlogReal.Models.Post

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>
@{
    var date = Model.Created.ToString("MMM dd, yyyy");
}@date
<div>
    <h4>Post</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Abstract)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Abstract)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Body)
        </dt>
        <dd class="col-sm-10">
            @Html.Raw(Model.Body)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Created)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Created)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Image)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Image != null)
            {
                //Converts the image back to 64 base
                <h3>This is the @Model.FileName image</h3>
                var base64 = Convert.ToBase64String(Model.Image);
                var imgSrc = string.Format("data:image/jpg;base64,{0}", base64);
                <img src="@imgSrc" class="img-responsive" alt="@Model.FileName" style="max-height:200px;" />
            }
            else
            {
                <p>No Image Available</p>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.IsPublished)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.IsPublished)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Blog)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Blog.Name)
        </dd>
    </dl>
    <hr />
    @foreach (var comment in Model.Comments)
    {
        <div class="Comment">
            <div class="Comment-header d-flex justify-content-between">
                <div class="user d-flex align-baseline-items-center">
                    

                    @*<div class="imgae"><img src="@imgSrc" alt="..." class="img-fluid rounded-circle" /></div>*@
                    <div class="title"><strong>@comment.BlogUser.LastName, @comment.BlogUser.FirstName</strong><span class="date"></span></div>
                </div>
            </div>
            <div class="comment-body">
                <p>@comment.Content</p>
            </div>
        </div>
        <hr />
    }
    @if (User.Identity.IsAuthenticated)
    {


      
        <form asp-controller="Comments" asp-action="Create" class="commenting-form">
            @Html.Hidden("PostId", Model.Id)
            <div class="row">
                <div class="form-group col-md-12">
                    <textarea name="Content" placeholder="Type your Comment" class="form-control"></textarea>
                </div>
                <div class="form-group col-md-12">
                    <button type="submit" class="btn btn-secondary">Submit Comment</button>
                </div>
            </div>
        </form>
    }



</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}